const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');
const opcao1 = require('./opcao1'); // Importando opcao1.js

const client = new Client({
    authStrategy: new LocalAuth()
});

client.on('qr', (qr) => {
    console.log('üìå Escaneie este QR Code com o WhatsApp Web:');
    qrcode.generate(qr, { small: true });
});

client.on('ready', () => {
    console.log('‚úÖ Bot conectado com sucesso!');
});

// Lista de n√∫meros autorizados
const numerosAutorizados = ['5518991550109@c.us'];

// Gerencia os estados dos usu√°rios
const estadosUsuarios = {};

client.on('message', async (message) => {
    try {
        // Verifica se o n√∫mero est√° na lista de autorizados
        if (!numerosAutorizados.includes(message.from)) {
            console.log(`‚ùå Mensagem ignorada de: ${message.from}`);
            return;
        }

        // Verifica se a mensagem n√£o est√° vazia
        if (!message.body || message.body.trim() === '') {
            console.log(`‚ö†Ô∏è Mensagem vazia recebida de ${message.from}, ignorando.`);
            return;
        }

        console.log(`üì© Mensagem recebida de ${message.from}: ${message.body}`);


        // Verifica se veio de outro fluxo
        if (estadosUsuarios[message.from] === 'Culto') {
            await opcao1(client, message, estadosUsuarios);
            return;
        };
        if (estadosUsuarios[message.from] === 'culto_encerrado') {
            await opcao1(client, message, estadosUsuarios);
            return;
        };
        if (estadosUsuarios[message.from] === 'resposta_encerramento') {
            await opcao1(client, message, estadosUsuarios);
            return;
        };




        // Enviar mensagem de boas-vindas apenas uma vez por usu√°rio
        if (!estadosUsuarios[message.from]) {
            const mensagemBoasVindas = `üëã Ol√°! Seja bem-vindo(a)!`;
            await client.sendMessage(message.from, mensagemBoasVindas);
            estadosUsuarios[message.from] = 'inicio'; // Marca o usu√°rio como ativo
        }

        // ‚úÖ Encaminha para opcao1.js se for a op√ß√£o 1
        if (message.body === '1') {
            await opcao1(client, message, estadosUsuarios);
            return;
        } else if (message.body === '2') {
            await client.sendMessage(message.from, 'üéâ Os pr√≥ximos eventos da igreja incluem um Retiro Espiritual no pr√≥ximo m√™s e uma Vig√≠lia especial na sexta-feira! Para mais detalhes, acesse nosso site ou fale com a secretaria da igreja.');
            return;
        } else if (message.body === '3') {
            await client.sendMessage(message.from, 'üìç Nossa igreja em Sorocaba est√° localizada na Rua Exemplo, 123, Bairro Centro. Para mais informa√ß√µes, entre em contato pelo telefone (15) 99999-9999.');
            return;
        } else if (message.body === '4') {
            await client.sendMessage(message.from, '‚ÑπÔ∏è A ADVEC (Assembleia de Deus Vit√≥ria em Cristo) √© uma igreja fundada pelo pastor Silas Malafaia, com igrejas em v√°rias cidades do Brasil. Para mais informa√ß√µes, acesse o site oficial: [www.advec.com.br](https://www.advec.com.br)');
            return;
        }

        // Se for uma mensagem inv√°lida, reenvia o menu inicial
        const menu = `üìå *Escolha uma op√ß√£o digitando o n√∫mero correspondente:*\n
        1Ô∏è‚É£ - Cultos da igreja\n
        2Ô∏è‚É£ - Eventos da igreja\n
        3Ô∏è‚É£ - Informa√ß√µes da igreja em Sorocaba\n
        4Ô∏è‚É£ - Informa√ß√µes da ADVEC\n
        \nDigite o n√∫mero da op√ß√£o desejada.`;

        await client.sendMessage(message.from, menu);

    } catch (error) {
        console.error(`‚ùå Erro ao processar mensagem de ${message.from}:`, error.message);
    }
});

client.initialize();
